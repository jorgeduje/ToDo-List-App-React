{"version":3,"sources":["componentes/Header.jsx","componentes/Loader.jsx","componentes/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","handleFilter","filtro","cantidadCompletadas","cantidadNoCompletadads","className","onClick","Loader","Todo","title","status","handleCompleteTodo","id","App","useState","todoList","setTodoList","setFiltro","buttonComplete","setButtonComplete","buttonUnComplete","setButtonUnComplete","useEffect","handleTodoList","a","fetch","response","json","result","resultTodoList","slice","complete","filter","x","completed","length","unComplete","contadorTareas","map","todo","valor","filtrados","singleTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcded0ec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Estilos\r\n\r\nimport \"../estilos/Header.css\"\r\n\r\nconst Header = ({handleFilter, filtro, cantidadCompletadas, cantidadNoCompletadads} ) => {\r\n\r\n    return(\r\n        <header className=\"Header\">\r\n            <div>\r\n                <h2 className=\"logo\">ToDo List</h2>\r\n            </div>\r\n            <div className=\"contenedor-botones\">\r\n                <button onClick={()=>handleFilter(null)}>Todos {filtro}</button>\r\n                <button onClick={()=>handleFilter(true)}>Completas {cantidadCompletadas}</button>\r\n                <button onClick={()=>handleFilter(false)}>Incompletas {cantidadNoCompletadads}</button>\r\n            </div>\r\n        </header>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport \"../estilos/Loader.css\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <p>Cargando...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\n\r\n\r\n// Estilos \r\nimport \"../estilos/Todo.css\"\r\n\r\nconst Todo = ({ title, status, handleCompleteTodo, id }) => {\r\n    return (\r\n        <div className=\"todo-card\">\r\n            <div className=\"todo-title\">\r\n                <h4>{title}</h4>\r\n            </div>\r\n\r\n            <div className=\"todo-actions\">\r\n                <button className={status ? \"completed\" : \"reset\"} onClick={() => handleCompleteTodo(id)}>{status? \"completada\" : \"no completada\"}</button>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import React, {useEffect, useState} from 'react';\n\n\n\n// Componentes \nimport Header from './componentes/Header';\nimport Loader from './componentes/Loader';\nimport Todo from './componentes/Todo';\n\n\n// Estilos\nimport \"./estilos/App.css\"\n\n\nconst App = ()=> {\n\n  // STATES\n    const [todoList, setTodoList] = useState([])\n    const [filtro, setFiltro] = useState(null)\n    const [buttonComplete, setButtonComplete] = useState(0)\n    const [buttonUnComplete, setButtonUnComplete] = useState(0)\n\n  // EFFECTS\n\n  useEffect(()=>{\n\n    const handleTodoList = async () =>{\n\n      const response = await fetch (\"https://jsonplaceholder.typicode.com/todos\")\n      const result = await response.json();\n      const resultTodoList = result.slice (0, 20);\n      setTodoList(resultTodoList)\n      setFiltro(resultTodoList)\n    }\n    \n    handleTodoList()\n    \n  }, []);\n\nuseEffect(()=>{\n\n  const contadorTareas = ()=>{\n    const complete = todoList.filter( x => x.completed === true)\n    setButtonComplete(complete.length)\n\n    const unComplete = todoList.filter( x => x.completed === false)\n    setButtonUnComplete(unComplete.length)\n  }\n\n  contadorTareas()\n\n})\n\n\n\n  const handleFilter = (valor)=>{\n\n    if(valor === null){\n      setFiltro(todoList)\n      \n    }\n    else if(valor === true){\n      setFiltro(todoList.filter( filtrados => filtrados.completed === true\n        ))\n        \n    }\n    else if(valor === false){\n      setFiltro(todoList.filter(filtrados => filtrados.completed === false))\n        \n    }\n\n    \n  }\n\n\n\n\n\n  // Funciones\n\n  const handleCompleteTodo = (id)=>{\n    \n    setTodoList(todoList.map(todo => todo.id === id ? {...todo, completed: !todo.completed}: todo))\n    setFiltro(filtro.map(todo => todo.id === id ? {...todo, completed: !todo.completed}: todo))\n\n  }\n\n\n\n  return (\n\n    <div className=\"App\">\n\n      <Header handleFilter={handleFilter} filtro={todoList.length} cantidadCompletadas={buttonComplete} cantidadNoCompletadads={buttonUnComplete}/>\n\n    <div className=\"todo-container\">\n      {\n        filtro && filtro.length > 0 ? (filtro.map(( singleTodo )=>{\n          return(\n\n           <Todo \n           key={singleTodo.id} \n           title={singleTodo.title}\n           status={singleTodo.completed}\n           handleCompleteTodo={handleCompleteTodo}\n           id={singleTodo.id}\n           \n           />\n\n          )\n        })) : (<Loader />)\n      }\n      </div>\n\n\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}